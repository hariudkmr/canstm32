<Window x:Name="MainWindow1" x:Class="CAN_X_CAN_Analyzer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CAN_X_CAN_Analyzer"
        mc:Ignorable="d" 
        Title="CAN-X" WindowStartupLocation="CenterScreen" Margin="0" Height="735.5" Width="1186" Closing="Window_Closing" Loaded="MainWindow1_Loaded" ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="MyStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard HandoffBehavior="Compose">
                        <Storyboard TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.3" To="LightGreen" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" 
                    CornerRadius="10" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="RoundedToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="border" 
                    CornerRadius="10" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <!--<Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    
    <Grid>
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Height="25" Margin="0">
                <Menu Height="21" VerticalAlignment="Top" Margin="0,0,0,10">
                    <MenuItem Header="File">
                        <MenuItem x:Name="MenuItemOpenProject" Header="Open Project" Click="MenuItemOpenProject_Click"/>
                        <MenuItem x:Name="MenuItemSaveProject" Header="Save Project" Click="MenuItemSaveProject_Click"/>
                        <Separator/>
                        <MenuItem x:Name="MenuItemExit" Header="Exit" Click="MenuItemExit_Click"/>
                    </MenuItem>
                </Menu>
            </StackPanel>
            <StackPanel DockPanel.Dock="Right" Width="192" Margin="0,0,5,5" Background="#FFEEEEEE">
                <RichTextBox x:Name="RichTextBoxConnectStatus" Height="20" Margin="0,10,0,0" VerticalAlignment="Top" Width="155" IsEnabled="False" HorizontalAlignment="Center">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="Press the Connect Button"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,25" HorizontalAlignment="Center">
                    <Button x:Name="ButtonConnect"  VerticalAlignment="Top" Width="75" Margin="0,0,2,0" Click="ButtonConnect_Click" HorizontalAlignment="Right" Template="{StaticResource RoundedButtonTemplate}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Image Source="Resources/connect.png" Width="25" />
                    </Button>
                    <Button x:Name="ButtonDisconnect" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="2,0,0,0" Click="ButtonDisconnect_Click" Template="{StaticResource RoundedButtonTemplate}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Image Source="Resources/disconnect.png" Width="25" />
                    </Button>
                </StackPanel>
                <GroupBox Height="200" Header="Node Settings" BorderBrush="#FFABAFB2" Margin="0,0,0,10">
                    <StackPanel Height="165" Margin="0,6,0,0">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Label Content="Node"/>
                            <ComboBox x:Name="ComboBoxNodeSettings" Margin="0" VerticalAlignment="Top" Width="100" SelectionChanged="ComboBoxNodeSettings_SelectionChanged" SelectedIndex="0" HorizontalAlignment="Right"/>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Label Content="APB1 Clock" />
                            <ComboBox x:Name="ComboBoxAPB1" Margin="0" VerticalAlignment="Top" Width="100" SelectionChanged="ComboBoxAPB1_SelectionChanged" SelectedIndex="0" HorizontalAlignment="Right" />
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Label Content="Baud Rate (Kbit/s)" />
                            <ComboBox x:Name="ComboBoxBaudRate" Margin="0" VerticalAlignment="Top" SelectionChanged="ComboBoxBaudRate_SelectionChanged" Width="75" HorizontalAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Label Content="BTR Reg" />
                            <TextBox x:Name="TextBoxBtrValue" MaxLength="10" Height="23" Margin="0" TextWrapping="Wrap" Text="0x001A001D" VerticalAlignment="Top" Width="120" HorizontalAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5" HorizontalAlignment="Center">
                            <CheckBox x:Name="CheckBoxListenOnly" Content="Listen Only" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left" Click="CheckBoxListenOnly_Click"/>
                        </StackPanel>
                        <Button x:Name="ButtonBtrValue" Content="Send BTR" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Margin="0,10,0,0" Click="ButtonBtrValue_Click" Template="{StaticResource RoundedButtonTemplate}"/>
                    </StackPanel>
                </GroupBox>
                <!--<GroupBox Header="Filters &amp; Masks" Height="113" BorderBrush="#FFABAFB2" IsEnabled="False">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="180">
                            <Label Content="Filter" />
                            <TextBox Height="23" Margin="82,10,-2,0" TextWrapping="Wrap" Text="TextBox" Width="60" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="-0.026,0.42"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                            <Label Content="Mask"/>
                            <TextBox Height="23" Margin="82,10,-2,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" HorizontalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel MinHeight="10">
                            <CheckBox Content="Enable Mask &amp; Filter" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>-->
                <CheckBox x:Name="CheckBoxBlind" Content="I'm Blind" Click="CheckBoxBlind_Click" />
                   <StackPanel Orientation="Horizontal">
                    <RadioButton Content="Hex" GroupName="DataType" IsChecked="True" />
                    <RadioButton Content="Binary" GroupName="DataType" IsEnabled="False" />
                    <RadioButton GroupName="DataType" Content="Decimal" IsEnabled="False" />
                </StackPanel>
                <CheckBox x:Name="CheckBoxAscii" Content="ASCII" Click="CheckBoxAscii_Click" />
                <CheckBox x:Name="CheckBoxNotes" Content="Notes" Click="CheckBoxNotes_Click" />
            </StackPanel>

            <TabControl Margin="0,0,0,10" >
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="Black" CornerRadius="15,5,0,0" Margin="0,0">
                                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="#FFD1D1D1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Message Monitor">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="200"/>
                            <RowDefinition Height="60"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="20,0,0,0" RenderTransformOrigin="0.492,1.483" Grid.ColumnSpan="3">
                            <Button x:Name="ButtonClear" Content="Clear" Width="75" Margin="0,0,10,0" Click="ButtonClear_Click" Height="20" Template="{StaticResource RoundedButtonTemplate}"/>
                            <Button x:Name="ButtonSaveRxMessages" Content="Save Messages" Width="91" Margin="30,0,0,0" Click="ButtonSaveRxMessages_Click" Height="20" MinWidth="100" Template="{StaticResource RoundedButtonTemplate}">
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold" FontSize="14">
                                          Save Messages
                                        </TextBlock>
                                        <TextBlock>
                                          Save messages to a CSV file
                                        </TextBlock>
                                    </StackPanel>
                                </Button.ToolTip>
                            </Button>
                            <!--<Button x:Name="ButtonLoadMessages" Content="Load Messages" Margin="10,0,0,0" Height="20" MinWidth="100" />-->
                            <ToggleButton x:Name="ButtonPauseMessages" Content="Pause" Margin="10,0,0,0" Click="ButtonPauseMessages_Click" Height="20" MinWidth="70" Template="{StaticResource RoundedToggleButtonTemplate}"/>

                            <ToggleButton x:Name="ButtonScrollMessages" Content="Scroll" Margin="10,0,0,0" Click="ButtonScrollMessages_Click" Height="20" MinWidth="70" Template="{StaticResource RoundedToggleButtonTemplate}"/>
                        </StackPanel>
                        <DataGrid x:Name="dataGridRx" ItemsSource="{Binding Values}" Grid.Row="1" CanUserAddRows="True" GridLinesVisibility="None" AutoGenerateColumns="False" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuItemSaveRx" Header="Save to Rx" Click="MenuItemSaveRx_Click_1"/>
                                    <MenuItem x:Name="MenuItemSaveRxWithData" Header="Save to Rx with data" IsEnabled="False"/>
                                    <MenuItem x:Name="MenuItemSaveTx" Header="Save to Tx" Click="MenuItemSaveTx_Click"/>
                                    <MenuItem x:Name="MenuItemSaveTxWithData" Header="Save to Tx with data" IsEnabled="False"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Background>
                                <ImageBrush/>
                            </DataGrid.Background>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Height" Value="18"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Line" Binding="{Binding Line, Mode=OneWay, NotifyOnTargetUpdated=True}" />
                                <DataGridTextColumn Header="RxCnt" Binding="{Binding Count, Mode=OneWay, NotifyOnTargetUpdated=True}" />
                                <DataGridTextColumn Header="TxCnt" Binding="{Binding TxCount, Mode=OneWay, NotifyOnTargetUpdated=True}" />

                                <DataGridTextColumn Header="TimeAbs" Binding="{Binding TimeAbs, Mode=OneWay, NotifyOnTargetUpdated=True}" />
                                <DataGridTemplateColumn Header="Tx" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Tx}" Value="true">
                                                                <Setter Property="Source" Value="/Resources/green_icon.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Err" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Err}" Value="true">
                                                                <Setter Property="Source" Value="/Resources/red_icon.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="RTR" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RTR}" Value="true">
                                                                <Setter Property="Source" Value="/Resources/blue_icon.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Header="Description"  Binding="{Binding Description, Mode=OneWay}" />
                                <DataGridTextColumn Header="IDE" Binding="{Binding IDE, Mode=OneWay}" />
                                <DataGridTextColumn Header="ArbID" Binding="{Binding ArbID, Mode=OneWay}" />
                                <DataGridTextColumn Header="DLC" Binding="{Binding DLC, Mode=OneWay, NotifyOnTargetUpdated=True}" />
                                <DataGridTextColumn Header="Byte1" Binding="{Binding Byte1, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte2" Binding="{Binding Byte2, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte3" Binding="{Binding Byte3, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte4" Binding="{Binding Byte4, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte5" Binding="{Binding Byte5, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte6" Binding="{Binding Byte6, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte7" Binding="{Binding Byte7, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Byte8" Binding="{Binding Byte8, Mode=OneWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource MyStyle}" />
                                <DataGridTextColumn Header="Node" Binding="{Binding Node, Mode=OneWay}" />
                                <DataGridTextColumn Header="ASCII" Binding="{Binding ASCII, Mode=OneWay}" />
                                <DataGridTextColumn Header="Notes" Binding="{Binding Notes, Mode=OneWay}" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <GridSplitter Grid.Row="2" Background="#FF80B3FD" HorizontalAlignment="Stretch" Margin="0"/>

                        <Grid Grid.Row="3">

                            <DataGrid x:Name="dataGridTx" GridLinesVisibility="All" IsReadOnly="True" AutoGenerateColumns="False" Margin="0" Background="White" Grid.ColumnSpan="3">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Key" Binding="{Binding Path='Key', Mode=OneWay}" />
                                <DataGridTextColumn Header="Description" Binding="{Binding Path='Description'}" />
                                <DataGridTemplateColumn Header="TX" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Name="bthnView" Content="Send" Click="ButtonTxMessage_Click"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="AutoTx" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox Name="CheckBoxAutoTx" IsChecked="{Binding Path='AutoTx', Mode=TwoWay}" Checked="CheckBoxAutoTx_Checked" Unchecked="CheckBoxAutoTx_Unchecked"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Rate" Binding="{Binding Path='Rate', Mode=OneWay}" />
                                <DataGridTextColumn Header="IDE" Binding="{Binding Path='IDE', Mode=OneWay}" />
                                <DataGridTextColumn Header="ArbID" Binding="{Binding Path='ArbID', Mode=TwoWay}" />
                                <DataGridTextColumn Header="RTR" Binding="{Binding Path='RTR', Mode=OneWay}" />
                                <DataGridTextColumn Header="DLC" Binding="{Binding Path='DLC', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte1" Binding="{Binding Path='Byte1', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte2" Binding="{Binding Path='Byte2', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte3" Binding="{Binding Path='Byte3', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte4" Binding="{Binding Path='Byte4', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte5" Binding="{Binding Path='Byte5', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte6" Binding="{Binding Path='Byte6', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte7" Binding="{Binding Path='Byte7', Mode=OneWay}" />
                                <DataGridTextColumn Header="Byte8" Binding="{Binding Path='Byte8', Mode=OneWay}" />
                                <DataGridTextColumn Header="Node" Binding="{Binding Path='Node', Mode=OneWay}" />
                                </DataGrid.Columns>
                        </DataGrid>
                        </Grid>
                        <Grid x:Name="GridSpacer" Grid.Row="4" Margin="5,0,0,20">
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton x:Name="toggleButtonAutoTx" Width="60" Height="20" Margin="20,0,0,0" Content="AutoTx" Click="ToggleButtonAutoTx_Click" Template="{StaticResource RoundedToggleButtonTemplate}">
                                    <ToggleButton.ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold" FontSize="14">
                                               Auto Transmit
                                            </TextBlock>
                                            <TextBlock>
                                               Automatically transmit messages in list that are checked
                                            </TextBlock>
                                        </StackPanel>
                                    </ToggleButton.ToolTip>
                                </ToggleButton>
                                <Button x:Name="Test" Width="50" Height="25" Margin="50,0" Click="Test_Click">
                                    
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Message Editor">
                    <Grid Margin="0,0,0,20">
                        <TabControl TabStripPlacement="Bottom">
                            <TabItem Header="Receive Messages">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Top" Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="60"/>
                                            <RowDefinition Height="80"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" >
                                            <StackPanel.Background>
                                                <ImageBrush/>
                                            </StackPanel.Background>
                                            <TextBlock Text="Receive Messages" FontWeight="Bold" />
                                            <Button x:Name="ButtonAddEditRxRow" Width="25" Height="25" Margin="20,0,0,0" Click="ButtonAddEditRxRow_Click" FontWeight="Bold" FontSize="18" Background="{x:Null}" BorderBrush="{x:Null}" >
                                                <Image Source="Resources/icons8-plus-64.png"/>
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock FontWeight="Bold" FontSize="14">
                                                        Add Message
                                                        </TextBlock>
                                                        <TextBlock>
                                                            Adds a new message row
                                                        </TextBlock>
                                                    </StackPanel>
                                                </Button.ToolTip>
                                            </Button>
                                            <Button x:Name="ButtonDeleteEditRxRow" Width="25" Height="25" Margin="5,0,0,0" Click="ButtonDeleteEditRxRow_Click" FontWeight="Bold" FontSize="18" Background="{x:Null}" BorderBrush="{x:Null}" >
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock FontWeight="Bold" FontSize="14">
                                                        Delete Message
                                                        </TextBlock>
                                                        <TextBlock>
                                                        Select an ArbID to Delete
                                                        </TextBlock>
                                                    </StackPanel>
                                                </Button.ToolTip>
                                                <Image Source="Resources/icons8-minus-64.png" />
                                            </Button>
                                        </StackPanel>
                                        <DataGrid x:Name="dataGridEditRxMessages" Grid.Row="1" Background="White" MouseLeftButtonUp="DataGridEditRxMessages_MouseLeftButtonUp" PreviewMouseLeftButtonDown="DataGridEditRxMessages_PreviewMouseLeftButtonDown" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Key" Binding="{Binding Path='Key', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Description" Binding="{Binding Path='Description', Mode=OneWay}" />
                                                <DataGridTextColumn Header="IDE" Binding="{Binding Path='IDE', Mode=OneWay}" />
                                                <DataGridTextColumn Header="ArbID" Binding="{Binding Path='ArbID', Mode=OneWay}" />
                                                <DataGridTextColumn Header="DLC" Binding="{Binding Path='DLC', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte1" Binding="{Binding Path='Byte1', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte2" Binding="{Binding Path='Byte2', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte3" Binding="{Binding Path='Byte3', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte4" Binding="{Binding Path='Byte4', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte5" Binding="{Binding Path='Byte5', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte6" Binding="{Binding Path='Byte6', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte7" Binding="{Binding Path='Byte7', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Byte8" Binding="{Binding Path='Byte8', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Node" Binding="{Binding Path='Node', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Notes" Binding="{Binding Path='Notes', Mode=OneWay}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Grid Grid.Row="2" Margin="15,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="250"/>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition Width="70"/>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition Width="110"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="Description" />
                                                <TextBox x:Name="TextBoxRxDescription" Height="25" Margin="0" MaxLength="32" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10,0,0,0">
                                                <Label Content="ArbID"/>
                                                <TextBox x:Name="TextBoxRxArbID" Height="25" MaxLength="8" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Grid.Column="3" Margin="20,0,0,0">
                                                <Label Content="Node"/>
                                                <ComboBox x:Name="ComboBoxRxNode" SelectedIndex="0" MinHeight="25" DropDownClosed="ComboBoxRxNode_DropDownClosed" />
                                            </StackPanel>
                                        </Grid>
                                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="15,0,0,0" >
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="DLC"/>
                                                <TextBox x:Name="TextBoxRxDLC" Width="40" Height="25" MaxLength="1" TextChanged="TextBoxEditMessageRx_TextChanged" PreviewTextInput="TextBoxRxDLC_PreviewTextInput" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE1"/>
                                                <TextBox x:Name="TextBoxRxByte1" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE2"/>
                                                <TextBox x:Name="TextBoxRxByte2" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE3"/>
                                                <TextBox x:Name="TextBoxRxByte3" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE4"/>
                                                <TextBox x:Name="TextBoxRxByte4" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE5"/>
                                                <TextBox x:Name="TextBoxRxByte5" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE6"/>
                                                <TextBox x:Name="TextBoxRxByte6" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE7"/>
                                                <TextBox x:Name="TextBoxRxByte7" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE8"/>
                                                <TextBox x:Name="TextBoxRxByte8" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxRx_PreviewTextInput" TextChanged="TextBoxEditMessageRx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Width="250" Margin="20,0,0,0">
                                                <Label Content="Notes" />
                                                <TextBox x:Name="TextBoxRxNotes" Height="50" TextWrapping="Wrap" MaxLength="128" TextChanged="TextBoxEditMessageRx_TextChanged" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </DockPanel>
                            </TabItem>

                            <TabItem Header="Transmit Messages">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Top"  Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="60"/>
                                            <RowDefinition Height="80"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" >
                                            <TextBlock Text="Transmit Messages" FontWeight="Bold" />
                                            <Button x:Name="ButtonAddEditTxRow" Width="25" Height="25"  Margin="20,0,0,0" Click="ButtonAddEditTxRow_Click" FontSize="18" FontWeight="Bold" Background="{x:Null}" BorderBrush="{x:Null}">
                                                <Image Source="Resources/icons8-plus-64.png" />
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock FontWeight="Bold" FontSize="14">
                                                        Add Message
                                                        </TextBlock>
                                                        <TextBlock>
                                                            Adds a new message row
                                                        </TextBlock>
                                                    </StackPanel>
                                                </Button.ToolTip>
                                            </Button>
                                            <Button x:Name="ButtonDeleteEditTxRow" Width="25" Height="25"  Margin="5,0,0,0" Click="ButtonDeleteEditTxRow_Click" FontWeight="Bold" FontSize="18" Background="{x:Null}" BorderBrush="{x:Null}" >
                                                <Image Source="Resources/icons8-minus-64.png" />
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock FontWeight="Bold" FontSize="14">
                                                        Delete Message
                                                        </TextBlock>
                                                        <TextBlock>
                                                        Select an ArbID to Delete
                                                        </TextBlock>
                                                    </StackPanel>
                                                </Button.ToolTip>
                                            </Button>
                                        </StackPanel>
                                        <DataGrid x:Name="dataGridEditTxMessages" Grid.Row="1" Background="White" IsReadOnly="True" MouseLeftButtonUp="DataGridEditTxMessages_MouseLeftButtonUp" PreviewMouseLeftButtonDown="DataGridEditTxMessages_PreviewMouseLeftButtonDown" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Key" Binding="{Binding Path='Key', Mode=OneWay}" />
                                                <DataGridTextColumn Header="Description" Binding="{Binding Path='Description', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="AutoTx" Binding="{Binding Path='AutoTx', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Rate" Binding="{Binding Path='Rate', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="IDE" Binding="{Binding Path='IDE', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="ArbID" Binding="{Binding Path='ArbID' , Mode=TwoWay}" />
                                                <DataGridTextColumn Header="RTR" Binding="{Binding Path='RTR', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="DLC" Binding="{Binding Path='DLC', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte1" Binding="{Binding Path='Byte1', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte2" Binding="{Binding Path='Byte2', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte3" Binding="{Binding Path='Byte3', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte4" Binding="{Binding Path='Byte4', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte5" Binding="{Binding Path='Byte5', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte6" Binding="{Binding Path='Byte6', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte7" Binding="{Binding Path='Byte7', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Byte8" Binding="{Binding Path='Byte8', Mode=TwoWay}" />
                                                <DataGridTextColumn Header="Node" Binding="{Binding Path='Node', Mode=TwoWay}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Grid Grid.Row="2" Margin="15,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="250"/>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition Width="110"/>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition Width="110"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="Description" />
                                                <TextBox x:Name="TextBoxTxDescription" MaxLength="32" Height="25" Margin="0" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10,0,0,0">
                                                <Label Content="ArbID"/>
                                                <TextBox x:Name="TextBoxTxArbID" Height="25" MaxLength="8" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Grid.Column="2" Margin="10,0,0,0">
                                                <Label Content="Remote Transmit"/>
                                                <CheckBox x:Name="CheckBoxRemoteTransmit" Content="RTR" Margin="5,0,0,0" Click="CheckBoxRemoteTransmit_Click"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="3" Margin="20,0,0,0">
                                                <Label Content="Node"/>
                                                <ComboBox x:Name="ComboBoxTxNode" SelectedIndex="0" MinHeight="25" DropDownClosed="ComboBoxTxNode_DropDownClosed" />
                                            </StackPanel>
                                            <StackPanel x:Name="StackPanelHighVoltage" Grid.Column="4" Orientation="Vertical" Margin="10,0,0,0" IsEnabled="False">
                                                <Label Content="High Voltage"/>
                                                <CheckBox x:Name="CheckBoxHighVoltage" Content="GMLAN" Margin="5,0,0,0"/>
                                            </StackPanel>
                                        </Grid>
                                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="15,0,0,0" >
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="DLC"/>
                                                <TextBox x:Name="TextBoxTxDLC" Width="40" Height="25" MaxLength="1" TextChanged="TextBoxEditMessageTx_TextChanged" PreviewTextInput="TextBoxTxDLC_PreviewTextInput" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE1"/>
                                                <TextBox x:Name="TextBoxTxByte1" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE2"/>
                                                <TextBox x:Name="TextBoxTxByte2" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE3"/>
                                                <TextBox x:Name="TextBoxTxByte3" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE4"/>
                                                <TextBox x:Name="TextBoxTxByte4" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE5"/>
                                                <TextBox x:Name="TextBoxTxByte5" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE6"/>
                                                <TextBox x:Name="TextBoxTxByte6" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE7"/>
                                                <TextBox x:Name="TextBoxTxByte7" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <Label Content="BYTE8"/>
                                                <TextBox x:Name="TextBoxTxByte8" Width="40" Height="25" MaxLength="2" PreviewTextInput="TextBoxTx_PreviewTextInput" TextChanged="TextBoxEditMessageTx_TextChanged"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="15,0,0,0">
                                                <Label Content="AutoTx"/>
                                                <CheckBox x:Name="CheckBoxEditTxAutoTx" Content="Enable" Checked="CheckBoxEditTxAutoTx_Checked" Unchecked="CheckBoxEditTxAutoTx_Unchecked" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="15,0,0,0">
                                                <Label Content="Rate"/>
                                                <ComboBox x:Name="ComboBoxEditTxRate" SelectedIndex="0" Width="60"  IsEditable="True" TextBoxBase.TextChanged="OnComboBoxTxRateTextChanged" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </DockPanel>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
            </TabControl>
        </DockPanel>
        <StatusBar Height="25" VerticalAlignment="Bottom" Margin="0,0,10,0" Background="#FFE2E2E2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="110" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="300" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem >
                <TextBlock x:Name="StatusBarStatus" Foreground="Red" FontWeight="Bold" Margin="10,0,0,0" MinWidth="600" Height="25"/>
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="StatusBarStatusHardware" Margin="0,0,20,0" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <TextBlock x:Name="StatusBarStatusVersion" Margin="0,0,20,0" />
            </StatusBarItem>
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6">
                <ProgressBar x:Name="ProgressBar" RenderTransformOrigin="0.5,0.5" Height="20" Width="300" BorderBrush="#FF7C7C7C" Background="#FFCFCFCF" Margin="0" Maximum="5000" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6">
                <TextBlock x:Name="TextBoxBufferPercentage" Background="{x:Null}" MinWidth="300" MinHeight="20" TextAlignment="Center"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
